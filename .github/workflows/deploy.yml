name: Build and Deploy Resume Website

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-files
          path: dist

  deploy-infrastructure:
    needs: build
    runs-on: ubuntu-latest
    outputs:
      bucket_name: ${{ steps.terraform-outputs.outputs.bucket_name }}
      cloudfront_distribution_id: ${{ steps.terraform-outputs.outputs.cloudfront_distribution_id }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan -out=tfplan

      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply -auto-approve tfplan

      - name: Save Terraform outputs
        id: terraform-outputs
        run: |
          cd terraform
          echo "bucket_name=$(terraform output -raw website_bucket_name)" >> $GITHUB_OUTPUT
          echo "cloudfront_distribution_id=$(terraform output -raw cloudfront_distribution_id)" >> $GITHUB_OUTPUT

  deploy-content:
    needs: deploy-infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-files
          path: ./dist

      - name: Configure AWS credentials for S3
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Copy resume PDF to build directory
        run: |
          cp ./public/peter-kvac-resume.pdf ./dist/

      - name: Deploy to S3
        run: |
          aws s3 sync ./dist s3://peter-kvac-resume-bucket --delete

      - name: Configure AWS credentials for CloudFront
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ needs.deploy-infrastructure.outputs.cloudfront_distribution_id }} --paths "/*"

  smoke-test:
    needs: deploy-content
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "package-lock.json"

      - name: Install Cypress
        run: |
          npm install cypress

      - name: Run Cypress tests
        uses: cypress-io/github-action@v5
        with:
          browser: chrome
          config: baseUrl=https://www.peter-kvac.com
